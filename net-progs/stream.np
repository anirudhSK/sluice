global DPORT : bit<16> = 3490;
global IMPR_PORT : bit<16> = 11111; 
global CLICK_PORT : bit<16> = 22222;

packet impr {
    field ipv4srcAddr : bit<32>;
    field ipv4dstAddr : bit<32>;
    field ipv4protocol : bit<8>;
    field tcpSrcPort : bit<16>;
    field tcpDstPort : bit<16>;
    field adId : bit<32>;
    field impr_time : bit<32>;    
}

packet click {
    field ipv4srcAddr : bit<32>;
    field ipv4dstAddr : bit<32>;
    field ipv4protocol : bit<8>;
    field tcpSrcPort : bit<16>;
    field tcpDstPort : bit<16>;
    field adId : bit<32>;
    field click_time : bit<32>;    
}

packet result {
    field ipv4srcAddr : bit<32>;
    field ipv4dstAddr : bit<32>;
    field ipv4protocol : bit<8>;
    field tcpSrcPort : bit<16>;
    field tcpDstPort : bit<16>;
    field adId : bit<32>;
    field impr_time : bit<32>;    
    field click_time : bit<32>;    
}


snippet send_impr() {
  output a : impr;
  a.tcpSrcPort = IMPR_PORT;
  a.tcpDstPort = DPORT;
  call join();
}

snippet send_click() {
  output b : click;
  b.tcpSrcPort = CLICK_PORT;
  b.tcpDstPort = DPORT;
  call join();
}

snippet join () {
  input p : impr;
  input q : click;
  output r : result;
  if (p.adId == q.adId) {
    r.adId = p.adId;
    r.impr_time = p.impr_time;
    r.click_time = q.click_time;
    call receive();
  }
}


snippet receive() {
    input x : result;
}

(send_impr, join):a->p,
(send_click, join):b->q,
(join, receive):r->x,


