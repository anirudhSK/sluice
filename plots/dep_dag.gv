// Dependency Dag
digraph {
	"Transient a  BitArray(32, 1)" [label="Transient a : BitArray(32, 1)"]
	"Transient b  BitArray(32, 1)[6,]" [label="Transient b : BitArray(32, 1)[6,]"]
	"Persistent reg1  BitArray(32, 1)" [label="Persistent reg1 : BitArray(32, 1)"]
	"Persistent z  BitArray(32, 1)" [label="Persistent z : BitArray(32, 1)"]
	"Transient c  BitArray(32, 1)" [label="Transient c : BitArray(32, 1)"]
	"Transient d  BitArray(32, 1)[3,]" [label="Transient d : BitArray(32, 1)[3,]"]
	"Transient f  BitArray(32, 1)[10,]" [label="Transient f : BitArray(32, 1)[10,]"]
	"Transient q  BitArray(32, 1)[56,]" [label="Transient q : BitArray(32, 1)[56,]"]
	"Field p.x  BitArray(32, 1)" [label="Field p.x : BitArray(32, 1)"]
	"Field p.y  BitArray(32, 1)" [label="Field p.y : BitArray(32, 1)"]
	"Field p.z  BitArray(32, 1)" [label="Field p.z : BitArray(32, 1)"]
	"a = 2" [label="a = 2"]
	"c = a / b" [label="c = a / b"]
	"z = c + d" [label="z = c + d"]
	"p.x = c" [label="p.x = c"]
	"c = c - d" [label="c = c - d"]
	"q = a / 3" [label="q = a / 3"]
	"p.y = p.y + c" [label="p.y = p.y + c"]
	"d = f + 12" [label="d = f + 12"]
	"p.z = q + c" [label="p.z = q + c"]
	"reg1 = c" [label="reg1 = c"]
	"Transient a  BitArray(32, 1)" -> "a = 2"
	"Transient b  BitArray(32, 1)[6,]" -> "c = a / b"
	"Persistent reg1  BitArray(32, 1)" -> "reg1 = c"
	"Persistent z  BitArray(32, 1)" -> "z = c + d"
	"Transient c  BitArray(32, 1)" -> "c = a / b"
	"Transient d  BitArray(32, 1)[3,]" -> "z = c + d"
	"Transient f  BitArray(32, 1)[10,]" -> "d = f + 12"
	"Transient q  BitArray(32, 1)[56,]" -> "q = a / 3"
	"Field p.x  BitArray(32, 1)" -> "p.x = c"
	"Field p.y  BitArray(32, 1)" -> "p.y = p.y + c"
	"Field p.z  BitArray(32, 1)" -> "p.z = q + c"
	"a = 2" -> "c = a / b"
	"c = a / b" -> "z = c + d"
	"c = a / b" -> "q = a / 3"
	"z = c + d" -> "p.x = c"
	"z = c + d" -> "c = c - d"
	"p.x = c" -> "c = c - d"
	"c = c - d" -> "p.y = p.y + c"
	"c = c - d" -> "d = f + 12"
	"q = a / 3" -> "p.z = q + c"
	"p.y = p.y + c" -> "p.z = q + c"
	"p.z = q + c" -> "reg1 = c"
}
